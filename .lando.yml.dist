recipe: lemp

config:
  webroot: public
  database: mysql

proxy:
  nginx:
    - "*.dev.local.torfs.org"
  mailhog:
    - "*.mhg.local.torfs.org"
  phpmyadmin:
    - "*.pma.local.torfs.org"
  elk:
    - '*.elk.local.torfs.org:5601'

services:
  appserver:
    type: php:7.1
    via: nginx
    ssl: true
    install_dependencies_as_root:
      # Install and configure Blackfire
      - "bash $LANDO_MOUNT/.lando/install/blackfire.sh"
      - echo "blackfire.log_file=$LANDO_MOUNT/var/logs/blackfire.log" >> /usr/local/etc/php/conf.d/zz-blackfire.ini
      - echo "blackfire.log_level=2" >> /usr/local/etc/php/conf.d/zz-blackfire.ini
      - echo "blackfire.agent_socket=tcp://blackfire:8707" >> /usr/local/etc/php/conf.d/zz-blackfire.ini
      # Install igbinary extension
      - "pecl install igbinary"
      - "docker-php-ext-enable igbinary"
      # Configure xdebug
      - echo "xdebug.remote_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - echo "xdebug.remote_host=$LANDO_HOST_IP" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - echo "xdebug.remote_port=9000" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - echo "xdebug.idekey=PHPSTORM" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - echo "xdebug.remote_connect_back=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    install_dependencies_as_me:
      - "composer install --working-dir=$LANDO_MOUNT"
    config:
      server: .lando/install/nginx.conf
      conf: .lando/install/php.ini
    xdebug: true
    composer:
      hirak/prestissimo: "^0.3"
  blackfire:
      type: compose
      services:
        image: blackfire/blackfire
        command: blackfire-agent
  database:
    portforward: 3306
  phpmyadmin:
    type: phpmyadmin
    hosts:
      - database
  elk:
    type: compose
    portforward: 5601
    services:
      image: sebp/elk
      command: /usr/local/bin/start.sh
      volumes:
        - data_elasticsearch:/var/lib/elasticsearch
      ports:
        - '5601:5601'
      environment:
        - ES_CONNECT_RETRY=120
    overrides:
      volumes:
        data_elasticsearch: {}
  node:
    type: node
    install_dependencies_as_root:
      # Upgrade Yarn
      - "curl -o- -L https://yarnpkg.com/install.sh | bash"
    install_dependencies_as_me:
      - "yarn --cwd=$LANDO_MOUNT"
  mailhog:
    type: mailhog
    hogfrom:
      - appserver
  memcached:
    type: memcached
    mem: 256
  chrome-headless:
    type: compose
    services:
      image: justinribeiro/chrome-headless
      command: google-chrome --headless --disable-gpu --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222 --no-sandbox
  unoconv:
    type: compose
    services:
      image: zrrrzzt/docker-unoconv-webservice
      command: /usr/bin/unoconv --listener --server=0.0.0.0 --port=2002 & node standalone.js

tooling:
  sf:
    service: appserver
    description: Run Symfony console commands
    cmd: php bin/console
  yarn:
    service: node
    description: Run the Yarn package manager
    cmd: yarn

  blackfire:
    service: appserver
    description: Profile a Symfony console command using blackfire
    cmd: blackfire run php bin/console

  encore:
    service: node
    description: Runs Webpack Encore
    cmd: node_modules/.bin/encore